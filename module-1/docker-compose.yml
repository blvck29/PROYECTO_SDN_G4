version: '2.2'

services:
  freeradius:
    image: "2stacks/freeradius"
    container_name: freeradius
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    volumes:
      - "./docker-freeradius/configs/radius/users:/etc/raddb/users"
      - "./docker-freeradius/configs/radius/clients.conf:/etc/raddb/clients.conf"
    environment:
      - DB_NAME=radius
      - DB_HOST=mysql
      - DB_USER=radius
      - DB_PASS=radpass
      - DB_PORT=3306
      - RADIUS_KEY=testing123
      - RAD_CLIENTS=10.0.0.0/24
      - RAD_DEBUG=yes
    depends_on:
      - mysql
    restart: always
    networks:
      backend:
        ipv4_address: 10.10.0.2

  mysql:
    image: "mysql:5.7"
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - "./docker-freeradius/configs/mysql/master/data:/var/lib/mysql"
      #- "./docker-freeradius/configs/mysql/master/conf.d:/etc/mysql/conf.d"
      - "./docker-freeradius/configs/mysql/radius.sql:/docker-entrypoint-initdb.d/radius.sql"
    environment:
      - MYSQL_ROOT_PASSWORD=radius
      - MYSQL_USER=radius
      - MYSQL_PASSWORD=radpass
      - MYSQL_DATABASE=radius
    restart: always
    networks:
      backend:
        ipv4_address: 10.10.0.3

  cautive-portal:
    build:
      context: ./cautive-portal
      dockerfile: Dockerfile
    container_name: cautive-portal
    ports:
      - "5000:5000"
    depends_on:
      - freeradius
    restart: always
    networks:
      backend:
        ipv4_address: 10.10.0.4

  auth-catcher:
    build:
      context: ./auth-catcher
    container_name: auth_catcher
    expose:
      - "5015"
    networks:
      backend:
        ipv4_address: 10.10.0.5

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/24
